<%=
@xml.instruct! :xml, :version=>"1.0", :encoding=>"UTF-8"
@xml.Workbook({
  'xmlns'      => "urn:schemas-microsoft-com:office:spreadsheet",
  'xmlns:o'    => "urn:schemas-microsoft-com:office:office",
  'xmlns:x'    => "urn:schemas-microsoft-com:office:excel",
  'xmlns:html' => "http://www.w3.org/TR/REC-html40",
  'xmlns:ss'   => "urn:schemas-microsoft-com:office:spreadsheet"
  }) do

  @xml.Styles do
   @xml.Style 'ss:ID' => 'Default', 'ss:Name' => 'Normal' do
     @xml.Alignment 'ss:Vertical' => 'Top', 'ss:WrapText' => '1'
     @xml.Borders
     @xml.Font 'ss:FontName' => 'Verdana'
     @xml.Interior
     @xml.NumberFormat
     @xml.Protection
   end
   @xml.Style 'ss:ID' => 's22' do
     @xml.NumberFormat 'ss:Format' => 'General Date'
   end
   @xml.Style 'ss:ID' => 's62', 'ss:Name' => 'Header' do
     @xml.Font  'ss:Color'=>'#FFFFFF', 'ss:Bold'=>"1"
     @xml.Interior 'ss:Color'=>"#000000", 'ss:Pattern'=>'Solid'
   end
   @xml.Style 'ss:ID' => 's75', 'ss:Name' => 'Closed' do
     @xml.Font 'ss:Color'=>'#C5BE97', 'ss:Italic' => '1'
   end
   @xml.Style 'ss:ID' => 's76', 'ss:Name' => 'Alert' do
     @xml.Font 'ss:Color'=>'#FF0000'
   end

   @xml.Style 'ss:ID' => 's77', 'ss:Name' => 'StatusUnknown' do
     @xml.Font 'ss:Color'=>'#555555'
   end
   @xml.Style 'ss:ID' => 's78', 'ss:Name' => 'StatusGreen' do
     @xml.Font 'ss:Color'=>'#00FF00'
   end
   @xml.Style 'ss:ID' => 's79', 'ss:Name' => 'StatusAmber' do
     @xml.Font 'ss:Color'=>'#FFAA00'
   end
   @xml.Style 'ss:ID' => 's80', 'ss:Name' => 'StatusRed' do
     @xml.Font 'ss:Color'=>'#FF0000'
   end

   @xml.Style 'ss:ID' => 's81', 'ss:Name' => 'CurrentStatusUnknown' do
     @xml.Font 'ss:Color'=>'#000000', 'ss:Bold'=>'1'
     @xml.Interior 'ss:Color'=>"#DDDDDD", 'ss:Pattern'=>'Solid'
   end
   @xml.Style 'ss:ID' => 's82', 'ss:Name' => 'CurrentStatusGreen' do
     @xml.Font 'ss:Color'=>'#000000', 'ss:Bold'=>'1'
     @xml.Interior 'ss:Color'=>"#00FF00", 'ss:Pattern'=>'Solid'
   end
   @xml.Style 'ss:ID' => 's83', 'ss:Name' => 'CurrentStatusAmber' do
     @xml.Font 'ss:Color'=>'#FFFFFF', 'ss:Bold'=>'1'
     @xml.Interior 'ss:Color'=>"#FFAA00", 'ss:Pattern'=>'Solid'
   end
   @xml.Style 'ss:ID' => 's84', 'ss:Name' => 'CurrentStatusRed' do
     @xml.Font 'ss:Color'=>'#FFFFFF', 'ss:Bold'=>'1'
     @xml.Interior 'ss:Color'=>"#FF0000", 'ss:Pattern'=>'Solid'
   end

   @xml.Style 'ss:ID' => 's85', 'ss:Name' => 'ToBeValidated' do
     @xml.Font 'ss:Color'=>'#000000', 'ss:Bold'=>'0'
     @xml.Interior 'ss:Color'=>"#0087CC", 'ss:Pattern'=>'Solid'
   end
   @xml.Style 'ss:ID' => 's86', 'ss:Name' => 'Feedback' do
     @xml.Font 'ss:Color'=>'#000000', 'ss:Bold'=>'0'
     @xml.Interior 'ss:Color'=>"#e3b7eb", 'ss:Pattern'=>'Solid'
   end
   @xml.Style 'ss:ID' => 's87', 'ss:Name' => 'New' do
     @xml.Font 'ss:Color'=>'#000000', 'ss:Bold'=>'0'
     @xml.Interior 'ss:Color'=>"#fcbdbd", 'ss:Pattern'=>'Solid'
   end
   @xml.Style 'ss:ID' => 's88', 'ss:Name' => 'Acknowledged' do
     @xml.Font 'ss:Color'=>'#000000', 'ss:Bold'=>'0'
     @xml.Interior 'ss:Color'=>"#ffcd85", 'ss:Pattern'=>'Solid'
   end
   @xml.Style 'ss:ID' => 's89', 'ss:Name' => 'Performed' do
     @xml.Font 'ss:Color'=>'#000000', 'ss:Bold'=>'0'
     @xml.Interior 'ss:Color'=>"#D2F5B0", 'ss:Pattern'=>'Solid'
   end
end

# TOPICS

  @xml.Worksheet 'ss:Name' => 'Topics' do
    @xml.Table do
      # Columns width
      for width in ['30','130','430','120','400'] do
        @xml.Column nil, {'ss:Width' => width}
      end

      # Header
      @xml.Row 'ss:StyleID' => 's62' do
        for column in ['#','Supervisor', 'Topic','Created / Done', 'Decision'] do
          @xml.Cell do
            @xml.Data column, 'ss:Type' => 'String'
            @xml.NamedCell 'ss:Name' => 'FilterDatabase'
          end
        end
      end

      # Rows
      for p in @topics
        style = {}
        style = {'ss:StyleID' => 's75'} if p.done==1
        @xml.Row(style) do
          for column in ['id', 'person_name', 'topic', 'dates', 'decision'] do
            @xml.Cell do
              @xml.Data p.send(column), 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
            end
          end
        end
      end

    end
  @xml.AutoFilter 'x:Range' => 'R1C1:R2000C5', 'xmlns' => 'urn:schemas-microsoft-com:office:excel'
  end

# WEEK CHANGES

=begin
  @xml.Worksheet 'ss:Name' => 'Week Changes' do
    @xml.Table do
      # Columns width
      for width in ['100','60','80','60','400', '170', '80', '80', '80'] do
        @xml.Column nil, {'ss:Width' => width}
      end

      # Header
      @xml.Row 'ss:StyleID' => 's62' do
        for column in ['Type', 'PO', 'Workstream', 'Request', 'Summary', 'WP', 'Phase', 'Complexity', 'Status'] do
          @xml.Cell do
            @xml.Data column, 'ss:Type' => 'String'
            @xml.NamedCell 'ss:Name' => 'FilterDatabase'
          end
        end
      end

      # Rows
      for p in @week_changes
        style = {}
        #style = {'ss:StyleID' => 's75'} if p.done==1
        @xml.Row(style) do
          for column in ['reporter', 'po', 'workstream', 'request_id', 'summary', 'work_package', 'milestone', 'complexity', 'status'] do
            @xml.Cell do
              @xml.Data p.send(column), 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
            end
          end
        end
      end

    end
  @xml.AutoFilter 'x:Range' => 'R1C1:R2000C9', 'xmlns' => 'urn:schemas-microsoft-com:office:excel'
  end
=end

# AMENDMENTS

  @xml.Worksheet 'ss:Name' => 'Amendments' do
    @xml.Table do
      # Columns width
      for width in ['130','40','250', '50', '120', '300','300', '120', '80', '40'] do
        @xml.Column nil, {'ss:Width' => width}
      end

      # Header
      @xml.Row 'ss:StyleID' => 's62' do
        for column in ['Supervisor', 'Workstream', 'Project', 'Milestone', 'Date', 'Amendment', 'Actions', 'Resp', 'Duedate', 'Done'] do
          @xml.Cell do
            @xml.Data column, 'ss:Type' => 'String'
            @xml.NamedCell 'ss:Name' => 'FilterDatabase'
          end
        end
      end

      # Rows
      for p in @amendments
        style = {}
        style = {'ss:StyleID' => 's75'} if p.done==1
        @xml.Row(style) do
          for column in ['project.supervisor.name', 'project.workstream', 'project.full_name', 'milestone.upcase', 'created_at', 'amendment', 'action', 'responsible', 'duedate', 'done'] do
            @xml.Cell do
              @xml.Data cascade_send(p, column), 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
            end
          end
        end
      end

    end
  @xml.AutoFilter 'x:Range' => 'R1C1:R2000C10', 'xmlns' => 'urn:schemas-microsoft-com:office:excel'
  end

# STATUSES

  @xml.Worksheet 'ss:Name' => 'Projects Status' do
    @xml.Names do
      @xml.NamedRange 'ss:Name' => '_FilterDatabase', 'ss:RefersTo' => "='Projects Status'!R1C1:R165C9", 'ss:Hidden' => '1'
    end
    @xml.Table do

      # Columns width
      for width in ['130','34','167','239','50','63','63','130','257','257','257','257'] do
        @xml.Column nil, {'ss:Width' => width}
      end
      @xml.Column nil, {'ss:Width' => '110', 'ss:Span'=>'17'}

      # Header
      @xml.Row 'ss:StyleID' => 's62' do
        for column in ['Supervisor', 'WS','Project', 'Workpackage', 'BRN', 'Old status', 'Current Status', 'Date', 'Status Change Reason', 'Last change', 'Actions', 'Operational Alert', 'M3/G2/g2/pg2', 'G3/g3/pg3', 'G4/g4/pg4', 'QG BRD', 'QG ARD', 'M5/CCB/G5/g5/pg5',  'M5/M7', 'M7', 'M9', 'M9/M10', 'M10/G6/g6/pg6', 'QG TD/QG TD M', 'M10a', 'QG MIP', 'M11/G7/g7/pg7', 'M12', 'M12/M13', 'M13/G8/g8/pg8', 'M14/G9/g9/pg9'] do
          @xml.Cell do
            @xml.Data column, 'ss:Type' => 'String'
            @xml.NamedCell 'ss:Name' => 'FilterDatabase'
          end
        end
      end

      # Rows
      for p in @wps
        status = p.get_status
        style = {}
        style = {'ss:StyleID' => 's75'} if p.is_ended
        @xml.Row(style) do
          @xml.Cell { @xml.Data p.supervisor_name,    'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase' }
          @xml.Cell { @xml.Data p.workstream,         'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase' }
          @xml.Cell { @xml.Data p.project_name,       'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase' }
          @xml.Cell { @xml.Data p.full_wp_name,       'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase' }
          @xml.Cell { @xml.Data p.brn,                'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase' }
          @xml.Cell 'ss:StyleID' => status_excel_style2(p.old_status)  do @xml.Data text_status(p.old_status),  'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase' end
          @xml.Cell 'ss:StyleID' => status_excel_style2(p.last_status) do @xml.Data text_status(p.last_status), 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase' end
          @xml.Cell { @xml.Data status.updated_at ? "#{status.updated_at.to_date} (#{time_ago_in_words(status.updated_at.to_date)})" : "",   'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase' }
          @xml.Cell { @xml.Data('ss:Type' => 'String') do; @xml<<excel_text(status.reason); end;      @xml.NamedCell 'ss:Name' => 'FilterDatabase' }
          @xml.Cell { @xml.ssData('ss:Type' => 'String', 'xmlns'=>'http://www.w3.org/TR/REC-html40') do; @xml<<excel_text(status.get_last_change_excel); end; @xml.NamedCell 'ss:Name' => 'FilterDatabase' }
          @xml.Cell { @xml.Data('ss:Type' => 'String') do; @xml<<excel_text(status.actions); end;     @xml.NamedCell 'ss:Name' => 'FilterDatabase' }
          @xml.Cell { @xml.Data('ss:Type' => 'String') do; @xml<<excel_text(status.operational_alert); end; @xml.NamedCell 'ss:Name' => 'FilterDatabase' }
          for ms in [['M3','G2','g2','pg2'],
                     ['G3','g3','pg3'],
                     ['G4','g4','pg4'],
                     ['QG BRD'],
                     ['QG ARD'],
                     ['M5','G5','g5','pg5', 'CCB'],
                     ['M5/M7'],
                     ['M7'],
                     ['M9'],
                     ['M9/M10'],
                     ['M10','G6','g6','pg6'],
                     ['QG TD', 'QG TD M'],
                     ['M10a'],
                     ['QG MIP'],
                     ['M11','G7','g7','pg7'],
                     ['M12'],
                     ['M12/M13'],
                     ['M13','G8','g8','pg8','MIPM'],
                     ['M14','G9','g9','pg9']
                    ]
            status, style = p.get_milestone_status(ms)
            @xml.Cell(style) do
              @xml.Data('ss:Type' => 'String') do
                @xml << excel_text(status)
              end
              @xml.NamedCell 'ss:Name' => 'FilterDatabase'
            end
          end # for
        end # each project
      end # table
    end # worksheet
  @xml.AutoFilter 'x:Range' => 'R1C1:R2000C30', 'xmlns' => 'urn:schemas-microsoft-com:office:excel'
  end


# ACTIONS
=begin
  @xml.Worksheet 'ss:Name' => 'Actions' do
    @xml.Table do

      # Columns width
      for width in ['40','120','80','400','400', '120'] do
        @xml.Column nil, {'ss:Width' => width}
      end

      # Header
      @xml.Row 'ss:StyleID' => 's62' do
        for column in ['#','Resp', 'Target','Project', 'Action', 'Status'] do
          @xml.Cell do
            @xml.Data column, 'ss:Type' => 'String'
            @xml.NamedCell 'ss:Name' => 'FilterDatabase'
          end
        end
      end

      # Rows
      for p in @actions
        style = {}
        style = {'ss:StyleID' => 's75'} if p.progress=='closed' or p.progress=='abandonned'
        @xml.Row(style) do
          for column in ['id', 'person_name', 'due_date', 'project_full_name', 'action', 'progress'] do
            @xml.Cell do
              @xml.Data p.send(column), 'ss:Type' => 'String'; @xml.NamedCell 'ss:Name' => 'FilterDatabase'
            end
          end
        end
      end

    end
  @xml.AutoFilter 'x:Range' => 'R1C1:R2000C6', 'xmlns' => 'urn:schemas-microsoft-com:office:excel'
  end
=end

# REQUESTS

  @xml.Worksheet 'ss:Name' => 'Requests' do
    @xml.Table do

      # Columns width
      for width in ['70','60','400','70','150', '120', '90', '90', '90'] do
        @xml.Column nil, {'ss:Width' => width}
      end

      # Header
      @xml.Row 'ss:StyleID' => 's62' do
        for column in ['Request','WS','Summary', 'Milestone', 'WP', 'Complexity', 'Status', 'Submitted', 'Milestone'] do
          @xml.Cell do
            @xml.Data column, 'ss:Type' => 'String'
            @xml.NamedCell 'ss:Name' => 'FilterDatabase'
          end
        end
      end

      # Rows
      for p in @requests
        @xml.Row do
          for column in ['request_id', 'workstream', 'summary', 'milestone', 'work_package', 'complexity', 'status', 'date_submitted', 'milestone_date'] do
            @xml.Cell('ss:StyleID' => request_style(p)) do
              @xml.Data p.send(column), 'ss:Type' => 'String'
              @xml.NamedCell 'ss:Name' => 'FilterDatabase'
            end
          end
        end
      end

    end
  @xml.AutoFilter 'x:Range' => 'R1C1:R2000C9', 'xmlns' => 'urn:schemas-microsoft-com:office:excel'
  end

# STATUS PROGRESS
=begin
  @xml.Worksheet 'ss:Name' => 'Status Progress' do
    @xml.Table do

      # Header
      @xml.Row 'ss:StyleID' => 's62' do
        for column in @status_columns do
          @xml.Cell do
            @xml.Data column, 'ss:Type' => 'String'
            @xml.NamedCell 'ss:Name' => 'FilterDatabase'
          end
        end
      end

      # Rows
      for center in ['Total', 'EA', 'EI', 'EV', 'EDE', 'EDG', 'EDS', 'EDY', 'EDC', 'EM', 'EMNB', 'EMNC']
      for status in [1,2,3,0]
        @xml.Row do
          @xml.Cell do
            @xml.Data center, 'ss:Type' => 'String'
            @xml.NamedCell 'ss:Name' => 'FilterDatabase'
          end
          @xml.Cell do
            @xml.Data case status;when 1;'GREEN';when 2;'AMBER';when 3;'RED';when 0;'UNKNOWN';end, 'ss:Type' => 'String'
            @xml.NamedCell 'ss:Name' => 'FilterDatabase'
          end
          for date in @status_progress_dates do
            @xml.Cell do
              @xml.Data @status_progress_series[center][date].select{ |s| s.status==status}.size, 'ss:Type' => 'Number'
              @xml.NamedCell 'ss:Name' => 'FilterDatabase'
            end
          end
        end
      end
      end

    end
  @xml.AutoFilter 'x:Range' => 'R1C1:R2000C20', 'xmlns' => 'urn:schemas-microsoft-com:office:excel'
  end
=end

end
%>
